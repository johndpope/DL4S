#if !canImport(ObjectiveC)
import XCTest

extension GANTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GANTests = [
        ("testGAN", testGAN),
    ]
}

extension MNistTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MNistTest = [
        ("testGenerative", testGenerative),
        ("testMNist", testMNist),
        ("testMNistLstm", testMNistLstm),
    ]
}

extension MemTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MemTests = [
        ("testSliceRead", testSliceRead),
    ]
}

extension VecTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VecTests = [
        ("testAddBackwards", testAddBackwards),
        ("testAddBackwards2", testAddBackwards2),
        ("testAddBackwards3", testAddBackwards3),
        ("testAddBackwards4", testAddBackwards4),
        ("testAxisSum", testAxisSum),
        ("testDiv", testDiv),
        ("testDivBackwards", testDivBackwards),
        ("testDivBackwards2", testDivBackwards2),
        ("testDivBackwards3", testDivBackwards3),
        ("testGradientAddMul", testGradientAddMul),
        ("testGradientExp", testGradientExp),
        ("testGradientLog", testGradientLog),
        ("testGradientMatmul", testGradientMatmul),
        ("testLog", testLog),
        ("testMMul1x1", testMMul1x1),
        ("testMMul1x2", testMMul1x2),
        ("testMMul2x1", testMMul2x1),
        ("testMMul2x2", testMMul2x2),
        ("testMMul2x2_2", testMMul2x2_2),
        ("testMulBackwards", testMulBackwards),
        ("testMulBackwards2", testMulBackwards2),
        ("testMulBackwards3", testMulBackwards3),
        ("testNegativeIndices", testNegativeIndices),
        ("testSigmoid", testSigmoid),
        ("testSubBackwards", testSubBackwards),
        ("testSubBackwards2", testSubBackwards2),
        ("testSubBackwards3", testSubBackwards3),
        ("testVecOps", testVecOps),
        ("testVecOps2", testVecOps2),
        ("testVectorReadSlice", testVectorReadSlice),
        ("testVectorWrite", testVectorWrite),
        ("testVectorWriteItem", testVectorWriteItem),
        ("testVectorWriteItem2", testVectorWriteItem2),
    ]
}

extension VectorXORTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VectorXORTest = [
        ("testXOR", testXOR),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(GANTests.__allTests__GANTests),
        testCase(MNistTest.__allTests__MNistTest),
        testCase(MemTests.__allTests__MemTests),
        testCase(VecTests.__allTests__VecTests),
        testCase(VectorXORTest.__allTests__VectorXORTest),
    ]
}
#endif
